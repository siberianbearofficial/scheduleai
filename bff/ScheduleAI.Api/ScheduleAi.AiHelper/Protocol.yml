name: AiHelper
version: 1.1

endpoints:
  Request:
    input: AiHelperRequest
    output: AiHelperResponse
    mode: json

tools:
  GetGroupSchedule:
    params:
      - name: groupId
        type: string?
        description: Идентификатор группы. Если не передан, будет использована группа студента

      - name: from
        type: datetime
        description: Дата, начиная с которой надо получить расписание

      - name: to
        type: datetime
        description: Дата, до которой надо получить расписание
    
    result: Pair[]
    description: Получить расписание группы по ее названию. null, если такой группы не существует

  GetMergedSchedule:
    params:
      - name: groupId
        type: string?
        description: Идентификатор группы. Если не передан, будет использована группа студента

      - name: teacherId
        type: string
        example: "67836"

      - name: from
        type: datetime
        description: Дата, начиная с которой надо получить расписание

      - name: to
        type: datetime
        description: Дата, до которой надо получить расписание
    
    result: Pair[]
    description: Получить объединенное расписание преподавателя и группы. null, если группы или преподавателя не существует

  GetTeachersByGroup:
    params:
      - name: groupId
        type: string?
        description: Идентификатор группы. Если не передан, будет использована группа студента
    
    result: Teacher[]
    description: Найти всех преподавателей, преподающих что-либо в указанной группе

  GetTeachersByName:
    params:
      - name: substring
        type: string
        example: "Иванов"
    
    result: Teacher[]
    description: Найти преподавателей по подстроке в полном имени
  
  GetTeacherSchedule:
    params:
      - name: teacherId
        type: string
        example: "67836"

      - name: from
        type: datetime
        description: Дата, начиная с которой надо получить расписание

      - name: to
        type: datetime
        description: Дата, до которой надо получить расписание
    
    result: Pair[]
    description: Получить расписание преподавателя по его id. null, если преподавателя с таким id не существует
    
  GetGroupsByName:
    params:
      - name: substring
        type: string
        description: Подстрока для поиска
        
    result: Group[]
    description: Найти группы по подстроке. None, если не удалось найти группу либо групп, соответствующих подстроке слишком много. 

schemas:
  Pair:
    - name: teachers
      type: string[]

    - name: groupIds
      type: string[]

    - name: startTime
      type: datetime

    - name: endTime
      type: datetime

    - name: rooms
      type: string[]

    - name: discipline
      type: string

    - name: actType
      type: string?

    - name: convenience
      type: PairConvenience?
  
  PairConvenience:
    - name: coefficient
      type: float

    - name: collisions
      type: Pair[]

    - name: waitTime
      type: duration?

    - name: status
      type: int
  
  Teacher:
    - name: id
      type: string

    - name: fullName
      type: string
  
  Group:
    - name: id
      type: string

    - name: name
      type: string
  
  AiHelperRequest:
    - name: text
      type: string

    - name: currentTime
      type: datetime
      
    - name: groupId
      type: string
      
    - name: groupName
      type: string
  
  AiHelperResponse:
    - name: text
      type: string
      example: |
        Вы можете встретиться с <b>Куровым Андреем Владимировичем</b>, сегодня:
        <ul>
          <li><b>с 12:05 до 13:05</b>, лекция <i>«Базы Данных»</i>, аудитория <b>102x</b></li>
          <li><b>с 15:40 до 16:10</b>, семинар <i>«Компьютерная Графика»</i>, аудитория <b>304x</b></li>
        </ul>

    - name: pairs
      type: Pair[]?
